import sys
import pygame

from settings import Settings
from chessboard import ChessBoard


class ChessKingdom:
    """A class dedicated to managing the resources and the way the game works."""


    def __init__(self):
        """Initializing the game and creating its resources."""
        pygame.init()
        self.settings = Settings()
        self.chessboard = ChessBoard()

        self.screen = pygame.display.set_mode((self.settings.screen_width, self.settings.screen_height))
        self.settings.screen_width = self.screen.get_rect().width
        self.settings.screen_height = self.screen.get_rect().height
        pygame.display.set_caption("Chess Kingdom")

        self.display_mode = "board"  # start with displaying the board
        self.random_mode = False
        self.custom_mode = False

    def run_game(self):
        """Starting the main loop of the program."""
        self._draw_menu()
        self.screen.fill(self.settings.bg_color)
        self.chessboard.draw_board(self.screen)
        self._draw_menu()
        self._update_screen()
        while True:
            self._check_events()
            self.screen.fill(self.settings.bg_color)
            if self.display_mode == "board":
                self.chessboard.draw_board(self.screen)
            elif self.random_mode:
                self.chessboard.random_piece_arrangement(self.screen, 7, 5)
            elif self.custom_mode:
                self.chessboard.draw_board(self.screen)
                # implement custom piece arrangement
            self._draw_menu()
            self._update_screen()

    def _draw_menu(self):
        """Draws the menu on the screen."""
        font = pygame.font.Font(None, 36)
        text = font.render("Chess Kingdom", True, self.settings.white_color)
        text_rect = text.get_rect(center=(150, 50))
        self.screen.blit(text, text_rect)

        font = pygame.font.Font(None, 24)
        text = font.render("Select display mode:", True, self.settings.white_color)
        text_rect = text.get_rect(center=(150, 100))
        self.screen.blit(text, text_rect)

        pygame.draw.rect(self.screen, self.settings.white_color, (50, 150, 200, 50))
        text = font.render("Random piece arrangement", True, self.settings.black_color)
        text_rect = text.get_rect(center=(150, 175))
        self.screen.blit(text, text_rect)

        pygame.draw.rect(self.screen, self.settings.white_color, (50, 250, 200, 50))
        text = font.render("Custom piece arrangement", True, self.settings.black_color)
        text_rect = text.get_rect(center=(150, 275))
        self.screen.blit(text, text_rect)

    def _check_events(self):
        """Reaction to events generated by the keyboard and mouse."""
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if 50 < event.pos[0] < 250 and 150 < event.pos[1] < 200:
                    self.random_mode = True
                    self.custom_mode = False
                    self.display_mode = "random"
                elif 50 < event.pos[0] < 250 and 250 < event.pos[1] < 300:
                    self.random_mode = False
                    self.custom_mode = True
                    self.display_mode = "custom"


    def _update_screen(self):
        """Updates the images on the screen and goes to a new screen."""
        # Waiting for a key or mouse button to be pressed.
        pygame.display.flip()

if __name__ == '__main__':
    # Creation of a copy of the game and its launch.
    ai = ChessKingdom()
    ai.run_game()